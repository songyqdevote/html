html学习
一。HTML简介
	HTML 是用来描述网页的一种语言。
	HTML 指的是超文本标记语言: HyperText Markup Language
	HTML 不是一种编程语言，而是一种标记语言
	标记语言是一套标记标签 (markup tag)
	HTML 使用标记标签来描述网页
	HTML 文档包含了HTML 标签及文本内容
	HTML文档也叫做 web 页面
HTML实例；
   <!DOCTYPE html>
	<html>
	<head>
	<meta charset="utf-8">
	<title>菜鸟教程(runoob.com)</title>
	</head>
	<body>
	 
	<h1>我的第一个标题</h1>
	 
	<p>我的第一个段落。</p>
	 
	</body>
	</html>
实例解析：
	<!DOCTYPE html> 声明为 HTML5 文档
	<html> 元素是 HTML 页面的根元素
	<head> 元素包含了文档的元（meta）数据，如 <meta charset="utf-8"> 定义网页编码格式为 utf-8。
	目前在大部分浏览器中，直接输出中文会出现中文乱码的情况，这时候我们就需要在头部将字符声明为 UTF-8。
	总结：【只有在MySQL中可以使用"utf-8"的别名"utf8"，但是在其他地方一律使用大写"UTF-8"。】
	具体为：
	除了在命令 "mysql_query(set names utf8)" 外一律用大写"UTF-8"。
	<title> 元素描述了文档的标题
	<body> 元素包含了可见的页面内容，只有body区域的内容才在页面显示；
	<h1> 元素定义一个大标题
	<p> 元素定义一个段落	
	注意:HTML中不支持 空格、回车、制表符，它们都会被解析成一个空白字符。
	
HTML 标签
	HTML 标记标签通常被称为 HTML 标签 (HTML tag)。

	HTML 标签是由尖括号包围的关键词，比如 <html>
	HTML 标签通常是成对出现的，比如 <b> 和 </b>
	标签对中的第一个标签是开始标签，第二个标签是结束标签
	开始和结束标签也被称为开放标签和闭合标签
	<标签>内容</标签>
二、HTML基础
HTML 标题
	HTML 标题（Heading）是通过<h1> - <h6> 标签来定义的.
HTML 段落
	HTML 段落是通过标签 <p> 来定义的.
	注意：浏览器会自动地在段落的前后添加空行。（</p> 是块级元素）
HTML 链接
	HTML 链接是通过标签 <a> 来定义的.
	实例
	<a href="http://www.runoob.com">这是一个链接</a>
	在 href 属性中指定链接的地址。
HTML 图像
	HTML 图像是通过标签 <img> 来定义的.
	实例
	<img src="/images/logo.png" width="258" height="39" />
	1、*.html 文件跟 *.jpg 文件(f盘)在不同目录下：

	<img src="file:///f:/*.jpg" width="300" height="120"/>
	2、*.html 文件跟 *.jpg 图片在相同目录下：

	<img src="*.jpg" width="300" height="120"/> 3、*.html 文件跟 *.jpg 图片在不同目录下：
	a、图片 *.jpg 在 image 文件夹中，*.html 跟 image 在同一目录下：

	<img src="image/*.jpg/"width="300" height="120"/>
	b、图片 *.jpg 在 image 文件夹中，*.html 在 connage 文件夹中，image 跟 connage 在同一目录下：

	<img src="../image/*.jpg/"width="300" height="120"/>
	4、如果图片来源于网络，那么写绝对路径：

	<img src="http://static.runoob.com/images/runoob-logo.png" width="300" height="120"/>
三、HTML元素
	HTML 元素
	开始标签 *	              元素内容	              结束标签 *
	<p>	                    这是一个段落	              </p>
	<a href="default.htm">	这是一个链接	              </a>
	<br>	换行	 
	*开始标签常被称为起始标签（opening tag），结束标签常称为闭合标签（closing tag）。
	HTML 提示：使用小写标签
	HTML 标签对大小写不敏感：<P> 等同于 <p>。许多网站都使用大写的 HTML 标签。

	菜鸟教程使用的是小写标签，因为万维网联盟（W3C）在 HTML 4 中推荐使用小写，而在未来 (X)HTML 版本中强制使用小写。
HTML 属性
	HTML 元素可以设置属性
	属性可以在元素中添加附加信息
	属性一般描述于开始标签
	属性总是以名称/值对的形式出现，比如：name="value"。
	HTML 链接由 <a> 标签定义。链接的地址在 href 属性中指定：
	实例
	<a href="http://www.runoob.com">这是一个链接</a>
	HTML 属性常用引用属性值
	属性值应该始终被包括在引号内。
	双引号是最常用的，不过使用单引号也没有问题。
	Remark提示: 在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号，例如：name='John "ShotGun" Nelson'
	属性和属性值，尽量小写，本来这样做也方便些。
	class 属性可以多用 class=" " （引号里面可以填入多个class属性）
	id 属性只能单独设置 id=" "（只能填写一个，多个无效）
HTML 水平线
	<hr> 标签在 HTML 页面中创建水平线。
	hr 元素可用于分隔内容。	
HTML 注释
	可以将注释插入 HTML 代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注释，也不会显示它们。
	注释写法如下:
	实例
	<!-- 这是一个注释 -->	
文本格式化
	<!DOCTYPE html>
	<html>
	<head> 
	<meta charset="utf-8"> 
	<title>菜鸟教程(runoob.com)</title> 
	</head> 
	<body>

	<b>加粗文本</b><br><br>
	<i>斜体文本</i><br><br>
	<code>电脑自动输出</code><br><br>
	这是 <sub> 下标</sub> 和 <sup> 上标</sup>

	</body>
	</html>
HTML 文本格式化标签
	标签	描述
	<b>	定义粗体文本
	<em>	定义着重文字
	<i>	定义斜体字
	<small>	定义小号字
	<strong>	定义加重语气
	<sub>	定义下标字
	<sup>	定义上标字
	<ins>	定义插入字
	<del>	定义删除字
	HTML "计算机输出" 标签
	标签	描述
	<code>	定义计算机代码
	<kbd>	定义键盘码
	<samp>	定义计算机代码样本
	<var>	定义变量
	<pre>	定义预格式文本
	HTML 引文, 引用, 及标签定义
	标签	描述
	<abbr>	定义缩写
	<address>	定义地址
	<bdo>	定义文字方向
	<blockquote>	定义长的引用
	<q>	定义短的引用语
	<cite>	定义引用、引证
	<dfn>	定义一个定义项目。
HTML <base> 元素
	<base> 标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接:
	<head>
	<base href="http://www.runoob.com/images/" target="_blank">
	</head>
HTML <link> 元素
	<link> 标签定义了文档与外部资源之间的关系。

	<link> 标签通常用于链接到样式表:

	<head>
	<link rel="stylesheet" type="text/css" href="mystyle.css">
	</head>
HTML <style> 元素
	<style> 标签定义了HTML文档的样式文件引用地址.

	在<style> 元素中你也可以直接添加样式来渲染 HTML 文档:

	<head>
	<style type="text/css">
	body {background-color:yellow}
	p {color:blue}
	</style>
	</head>
HTML <meta> 元素
	meta标签描述了一些基本的元数据。

	<meta> 标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析。

	META 元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。

	元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他Web服务。

	<meta> 一般放置于 <head> 区域

	<meta> 标签- 使用实例
	为搜索引擎定义关键词:

	<meta name="keywords" content="HTML, CSS, XML, XHTML, JavaScript">
	为网页定义描述内容:

	<meta name="description" content="免费 Web & 编程 教程">
	定义网页作者:

	<meta name="author" content="Runoob">
	每30秒钟刷新当前页面:

	<meta http-equiv="refresh" content="30">
HTML <script> 元素
	<script>标签用于加载脚本文件，如： JavaScript。

	<script> 元素在以后的章节中会详细描述。
HTML head 元素
	标签	描述
	<head>	定义了文档的信息
	<title>	定义了文档的标题
	<base>	定义了页面链接标签的默认链接地址
	<link>	定义了一个文档和外部资源之间的关系
	<meta>	定义了HTML文档中的元数据
	<script>	定义了客户端的脚本文件
	<style>	定义了HTML文档的样式文件
HTML 样式- CSS
	CSS (Cascading Style Sheets) 用于渲染HTML元素标签的样式.
如何使用CSS
	CSS 是在 HTML 4 开始使用的,是为了更好的渲染HTML元素而引入的.

	CSS 可以通过以下方式添加到HTML中:

	内联样式- 在HTML元素中使用"style" 属性
	内部样式表 -在HTML文档头部 <head> 区域使用<style> 元素 来包含CSS
	外部引用 - 使用外部 CSS 文件
	最好的方式是通过外部引用CSS文件
HTML 表格标签
	标签	描述
	<table>	定义表格
	<th>	定义表格的表头
	<tr>	定义表格的行
	<td>	定义表格单元
	<caption>	定义表格标题
	<colgroup>	定义表格列的组
	<col>	定义用于表格列的属性
	<thead>	定义表格的页眉
	<tbody>	定义表格的主体
	<tfoot>	定义表格的页脚
HTML 列表标签
	标签	描述
	<ol>	定义有序列表
	<ul>	定义无序列表
	<li>	定义列表项
	<dl>	定义列表
	<dt>	自定义列表项目
	<dd>	定义自定列表项的描述
HTML <div> 元素
	HTML <div> 元素是块级元素，它可用于组合其他 HTML 元素的容器。

	<div> 元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。

	如果与 CSS 一同使用，<div> 元素可用于对大的内容块设置样式属性。

	<div> 元素的另一个常见的用途是文档布局。它取代了使用表格定义布局的老式方法。使用 <table> 元素进行文档布局不是表格的正确用法。<table> 元素的作用是显示表格化的数据。

HTML <span> 元素
	HTML <span> 元素是内联元素，可用作文本的容器

	<span> 元素也没有特定的含义。

	当与 CSS 一同使用时，<span> 元素可用于为部分文本设置样式属性。
HTML 表单标签
	New : HTML5新标签

	标签	描述
	<form>	定义供用户输入的表单
	<input>	定义输入域
	<textarea>	定义文本域 (一个多行的输入控件)
	<label>	定义了 <input> 元素的标签，一般为输入标题
	<fieldset>	定义了一组相关的表单元素，并使用外框包含起来
	<legend>	定义了 <fieldset> 元素的标题
	<select>	定义了下拉选项列表
	<optgroup>	定义选项组
	<option>	定义下拉列表中的选项
	<button>	定义一个点击按钮
	<datalist>New	指定一个预先定义的输入控件选项列表
	<keygen>New	定义了表单的密钥对生成器字段
	<output>New	定义一个计算结果
HTML 脚本
	JavaScript 使 HTML 页面具有更强的动态和交互性。
HTML <script> 标签
	<script> 标签用于定义客户端脚本，比如 JavaScript。
	<script> 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。
	JavaScript 最常用于图片操作、表单验证以及内容动态更新。
HTML<noscript> 标签
	<noscript> 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。
	<noscript>元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。
	只有在浏览器不支持脚本或者禁用脚本时，才会显示 <noscript> 元素中的内容：
HTML 字符实体
	HTML 中的预留字符必须被替换为字符实体。
	一些在键盘上找不到的字符也可以使用字符实体来替换。
.htm 和 .html 的区别
	.htm 和 .html 的扩展名文件本质上是没有区别的。浏览器和 Web 服务器都会把它们当作 HTML 文件来处理。

	区别在于：

	.htm 应用在早期 DOS 系统，系统现在或者只能有三个字符。

	在 Unix 系统中后缀没有特别限制，一般用 .html。

	技术上区别
	如果一个 URL 没有指定文件名 (如 http://www.runoob.com/css/), 服务器会返回默认的文件名。通常默认文件名为 index.html, index.htm, default.html, 和 default.htm。

	如果服务器只配置了 "index.html" 作为默认文件，你必须将文件命名为 "index.html", 而不是 "index.htm"。

	但是，通常服务器可以设置多个默认文件，你可以根据需要设置默认文件名。

	不管怎样，HTML 完整的后缀是 ".html"。